plugins {
    id 'java-base'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework:spring-context:$springVersion"
        implementation 'org.aspectj:aspectjrt:1.9.8'
        implementation 'org.aspectj:aspectjweaver:1.9.8'
        implementation 'org.hibernate:hibernate-core:6.2.1.Final'
        implementation 'org.postgresql:postgresql:42.6.0'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.0.3'


        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit:$archUnitVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:$archUnitJunit5Version"

        compileOnly 'org.projectlombok:lombok:1.18.26'
        annotationProcessor 'org.projectlombok:lombok:1.18.26'

        testCompileOnly 'org.projectlombok:lombok:1.18.26'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    }
    test {
        useJUnitPlatform()
    }
}

tasks.register('repack', Jar) {
    dependsOn ':module-main:build'
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}